#!/bin/sh

GITHUB_PRIVATE_KEY=${GITHUB_PRIVATE_KEY:-$1}

if [ -z "$GITHUB_PRIVATE_KEY" ]; then
  echo "WARNING: No GITHUB_PRIVATE_KEY found. Terraform will not use a private key for GitHub authentication, this may cause issues if trying to clone modules from private repos."
else
  echo "GITHUB_PRIVATE_KEY found. Setting up SSH for GitHub authentication."

  # Determine the home directory of the current user
  HOME_DIR=$(eval echo ~$(whoami))

  # Create the .ssh directory if it doesn't exist
  mkdir -p "$HOME_DIR/.ssh"
  chmod 700 "$HOME_DIR/.ssh"

  # Write the private key to a file
  echo "$GITHUB_PRIVATE_KEY" > "$HOME_DIR/.ssh/id_rsa"
  chmod 600 "$HOME_DIR/.ssh/id_rsa"

  # Configure Git to use the private key
  echo "Host github.com" > "$HOME_DIR/.ssh/config"
  echo "  IdentityFile $HOME_DIR/.ssh/id_rsa" >> "$HOME_DIR/.ssh/config"
  echo "  StrictHostKeyChecking no" >> "$HOME_DIR/.ssh/config"

  ssh -T git@github.com

  # Configure Git to rewrite HTTPS URLs to SSH URLs
  git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
fi
